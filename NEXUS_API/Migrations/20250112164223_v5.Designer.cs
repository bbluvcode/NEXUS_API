// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NEXUS_API.Data;

#nullable disable

namespace NEXUS_API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20250112164223_v5")]
    partial class v5
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("NEXUS_API.Models.Account", b =>
                {
                    b.Property<string>("AccountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AccountId");

                    b.HasIndex("AccountId")
                        .IsUnique();

                    b.HasIndex("CustomerId");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("NEXUS_API.Models.Connection", b =>
                {
                    b.Property<string>("ConnectionId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("EquipmentId")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("NumberOfConnections")
                        .HasColumnType("int");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int");

                    b.HasKey("ConnectionId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("PlanId");

                    b.HasIndex("ServiceOrderId");

                    b.ToTable("Connections");
                });

            modelBuilder.Entity("NEXUS_API.Models.ConnectionDiary", b =>
                {
                    b.Property<int>("DiaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiaryId"));

                    b.Property<string>("ConnectionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateStart")
                        .HasColumnType("datetime2");

                    b.HasKey("DiaryId");

                    b.HasIndex("ConnectionId");

                    b.ToTable("ConnectionDiary");
                });

            modelBuilder.Entity("NEXUS_API.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ExpiredBan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredCode")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("IdentificationNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Image")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("LastSendCodeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpried")
                        .HasColumnType("datetime2");

                    b.Property<int>("SendCodeAttempts")
                        .HasColumnType("int");

                    b.HasKey("CustomerId");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.HasIndex("PhoneNumber")
                        .IsUnique();

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("NEXUS_API.Models.CustomerRequest", b =>
                {
                    b.Property<int>("RequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequestId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("DateCreate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolve")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("EquipmentRequest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsResponse")
                        .HasColumnType("bit");

                    b.Property<string>("RequestTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ServiceRequest")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("RequestId");

                    b.HasIndex("CustomerId");

                    b.ToTable("CustomerRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.Discount", b =>
                {
                    b.Property<string>("DiscountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ApplyTo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("DiscountId");

                    b.ToTable("Discounts");
                });

            modelBuilder.Entity("NEXUS_API.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("EmployeeCode")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.Property<int>("EmployeeRoleId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ExpiredBan")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiredCode")
                        .HasColumnType("datetime2");

                    b.Property<int>("FailedLoginAttempts")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(7)
                        .HasColumnType("nvarchar(7)");

                    b.Property<string>("IdentificationNo")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("LastSendCodeDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpried")
                        .HasColumnType("datetime2");

                    b.Property<int>("RetailShopId")
                        .HasColumnType("int");

                    b.Property<int>("SendCodeAttempts")
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.HasKey("EmployeeId");

                    b.HasIndex("EmployeeRoleId");

                    b.HasIndex("RetailShopId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("NEXUS_API.Models.EmployeeRole", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleId");

                    b.ToTable("EmployeeRoles");
                });

            modelBuilder.Entity("NEXUS_API.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiscountId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("EquipmentTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<int>("StockQuantity")
                        .HasColumnType("int");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("DiscountId");

                    b.HasIndex("EquipmentName")
                        .IsUnique();

                    b.HasIndex("EquipmentTypeId");

                    b.HasIndex("StockId");

                    b.HasIndex("VendorId");

                    b.ToTable("Equipments");
                });

            modelBuilder.Entity("NEXUS_API.Models.EquipmentType", b =>
                {
                    b.Property<int>("EquipmentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentTypeId"));

                    b.Property<string>("Provider")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("EquipmentTypeId");

                    b.HasIndex("TypeName")
                        .IsUnique();

                    b.ToTable("EquipmentTypes");
                });

            modelBuilder.Entity("NEXUS_API.Models.FeedBack", b =>
                {
                    b.Property<int>("FeedBackId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FeedBackId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<string>("FeedBackContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("FeedBackId");

                    b.HasIndex("CustomerId");

                    b.ToTable("FeedBacks");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockOrder", b =>
                {
                    b.Property<int>("InStockOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InStockOrderId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CurrencyUnit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("InStockRequestId")
                        .HasColumnType("int");

                    b.Property<DateTime>("InstockDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Payer")
                        .HasColumnType("int");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("VendorId")
                        .HasColumnType("int");

                    b.Property<bool>("isPay")
                        .HasColumnType("bit");

                    b.HasKey("InStockOrderId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("InStockRequestId");

                    b.HasIndex("StockId");

                    b.HasIndex("VendorId");

                    b.ToTable("InStockOrders");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockOrderDetail", b =>
                {
                    b.Property<int>("InStockOrderDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InStockOrderDetailId"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("InStockOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InStockOrderDetailId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("InStockOrderId");

                    b.ToTable("InStockOrderDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockRequest", b =>
                {
                    b.Property<int>("InStockRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InStockRequestId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<int>("TotalNumber")
                        .HasColumnType("int");

                    b.HasKey("InStockRequestId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("InStockRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockRequestDetail", b =>
                {
                    b.Property<int>("InStockRequestDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InStockRequestDetailId"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("InStockRequestId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InStockRequestDetailId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("InStockRequestId");

                    b.ToTable("InStockRequestDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.News", b =>
                {
                    b.Property<int>("NewsId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("NewsId"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasMaxLength(50)
                        .HasColumnType("int");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("NewsId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("NewsTB");
                });

            modelBuilder.Entity("NEXUS_API.Models.OutStockOrder", b =>
                {
                    b.Property<int>("OutStockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutStockId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("isPay")
                        .HasColumnType("bit");

                    b.HasKey("OutStockId");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("StockId");

                    b.ToTable("OutStockOrders");
                });

            modelBuilder.Entity("NEXUS_API.Models.OutStockOrderDetail", b =>
                {
                    b.Property<int>("OutStockDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OutStockDetailId"));

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("OutStockId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OutStockDetailId");

                    b.HasIndex("EquipmentId");

                    b.HasIndex("OutStockId");

                    b.ToTable("OutStockOrderDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.Plan", b =>
                {
                    b.Property<int>("PlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SecurityDeposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<bool>("isUsing")
                        .HasColumnType("bit");

                    b.HasKey("PlanId");

                    b.HasIndex("PlanName")
                        .IsUnique();

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("NEXUS_API.Models.PlanFee", b =>
                {
                    b.Property<int>("PlanFeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlanFeeId"));

                    b.Property<decimal>("CallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("DTDCallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<bool>("IsUsing")
                        .HasColumnType("bit");

                    b.Property<decimal>("LocalCallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("MessageMobileCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("PlanFeeName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PlanId")
                        .HasColumnType("int");

                    b.Property<decimal>("Rental")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("PlanFeeId");

                    b.HasIndex("PlanId");

                    b.ToTable("PlanFees");
                });

            modelBuilder.Entity("NEXUS_API.Models.Region", b =>
                {
                    b.Property<int>("RegionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RegionId"));

                    b.Property<string>("RegionCode")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("RegionName")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("RegionId");

                    b.ToTable("Regions");
                });

            modelBuilder.Entity("NEXUS_API.Models.RetailShop", b =>
                {
                    b.Property<int>("RetailShopId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RetailShopId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<bool>("IsMainOffice")
                        .HasColumnType("bit");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("RetailShopName")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("RetailShopId");

                    b.HasIndex("RegionId");

                    b.ToTable("RetailShops");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceBill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsPay")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("PayDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Payer")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<int>("ServiceOrderId")
                        .HasColumnType("int");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("BillId");

                    b.HasIndex("CreateDate");

                    b.HasIndex("ServiceOrderId")
                        .IsUnique();

                    b.ToTable("ServiceBills");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceBillDetail", b =>
                {
                    b.Property<int>("BillDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillDetailId"));

                    b.Property<int>("BillId")
                        .HasColumnType("int");

                    b.Property<decimal>("CallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("CallChargeTime")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("LocalCallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("LocalTime")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("MessageMobileCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("MessageMobileTime")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Rental")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("RentalDiscount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("STDCallCharge")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("STDTime")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("ServiceDiscount")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("BillDetailId");

                    b.HasIndex("BillId");

                    b.ToTable("ServiceBillDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceOrder", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<string>("AccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DateCreate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Deposit")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("EmpIDCreater")
                        .HasColumnType("int");

                    b.Property<int>("EmpIDSurveyor")
                        .HasColumnType("int");

                    b.Property<DateTime>("SurveyDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SurveyDescribe")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SurveyStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("OrderId");

                    b.HasIndex("AccountId");

                    b.HasIndex("DateCreate");

                    b.HasIndex("EmpIDCreater");

                    b.ToTable("ServiceOrders");
                });

            modelBuilder.Entity("NEXUS_API.Models.Stock", b =>
                {
                    b.Property<int>("StockId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StockId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("StockName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StockId");

                    b.HasIndex("RegionId");

                    b.ToTable("Stocks");
                });

            modelBuilder.Entity("NEXUS_API.Models.SupportRequest", b =>
                {
                    b.Property<int>("SupportRequestId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupportRequestId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateRequest")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateResolved")
                        .HasColumnType("datetime2");

                    b.Property<string>("DetailContent")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<int?>("EmpIdResolver")
                        .HasColumnType("int");

                    b.Property<bool>("IsResolved")
                        .HasColumnType("bit");

                    b.Property<int?>("ServiceOrderOrderId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("SupportRequestId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("EmpIdResolver");

                    b.HasIndex("ServiceOrderOrderId");

                    b.HasIndex("SupportRequestId");

                    b.ToTable("SupportRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.Vendor", b =>
                {
                    b.Property<int>("VendorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("VendorId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int?>("RegionId")
                        .HasColumnType("int");

                    b.Property<string>("VendorName")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("VendorId");

                    b.HasIndex("RegionId");

                    b.ToTable("Vendors");
                });

            modelBuilder.Entity("NEXUS_API.Models.Account", b =>
                {
                    b.HasOne("NEXUS_API.Models.Customer", "Customer")
                        .WithMany("Accounts")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NEXUS_API.Models.Connection", b =>
                {
                    b.HasOne("NEXUS_API.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Plan", "Plan")
                        .WithMany("Connections")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.ServiceOrder", "ServiceOrder")
                        .WithMany("Connections")
                        .HasForeignKey("ServiceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Plan");

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("NEXUS_API.Models.ConnectionDiary", b =>
                {
                    b.HasOne("NEXUS_API.Models.Connection", "Connection")
                        .WithMany("ConnectionDiaries")
                        .HasForeignKey("ConnectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Connection");
                });

            modelBuilder.Entity("NEXUS_API.Models.CustomerRequest", b =>
                {
                    b.HasOne("NEXUS_API.Models.Customer", "Customer")
                        .WithMany("CustomerRequests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NEXUS_API.Models.Employee", b =>
                {
                    b.HasOne("NEXUS_API.Models.EmployeeRole", "EmployeeRole")
                        .WithMany("Employees")
                        .HasForeignKey("EmployeeRoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.RetailShop", "RetailShop")
                        .WithMany("Employees")
                        .HasForeignKey("RetailShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EmployeeRole");

                    b.Navigation("RetailShop");
                });

            modelBuilder.Entity("NEXUS_API.Models.Equipment", b =>
                {
                    b.HasOne("NEXUS_API.Models.Discount", "Discount")
                        .WithMany("Equipments")
                        .HasForeignKey("DiscountId");

                    b.HasOne("NEXUS_API.Models.EquipmentType", "EquipmentType")
                        .WithMany("Equipments")
                        .HasForeignKey("EquipmentTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Stock", "Stock")
                        .WithMany("Equipments")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Vendor", "Vendor")
                        .WithMany("Equipments")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Discount");

                    b.Navigation("EquipmentType");

                    b.Navigation("Stock");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("NEXUS_API.Models.FeedBack", b =>
                {
                    b.HasOne("NEXUS_API.Models.Customer", "Customer")
                        .WithMany("FeedBacks")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockOrder", b =>
                {
                    b.HasOne("NEXUS_API.Models.Employee", "Employee")
                        .WithMany("InStockOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.InStockRequest", "InStockRequest")
                        .WithMany("InStockOrders")
                        .HasForeignKey("InStockRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Stock", "Stock")
                        .WithMany("InStockOrders")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Vendor", "Vendor")
                        .WithMany("InStockOrders")
                        .HasForeignKey("VendorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("InStockRequest");

                    b.Navigation("Stock");

                    b.Navigation("Vendor");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockOrderDetail", b =>
                {
                    b.HasOne("NEXUS_API.Models.Equipment", "Equipment")
                        .WithMany("InStockOrderDetails")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.InStockOrder", "InStockOrder")
                        .WithMany("InStockOrderDetails")
                        .HasForeignKey("InStockOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("InStockOrder");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockRequest", b =>
                {
                    b.HasOne("NEXUS_API.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockRequestDetail", b =>
                {
                    b.HasOne("NEXUS_API.Models.Equipment", "Equipment")
                        .WithMany()
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.InStockRequest", "InStockRequest")
                        .WithMany("InStockRequestDetails")
                        .HasForeignKey("InStockRequestId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("InStockRequest");
                });

            modelBuilder.Entity("NEXUS_API.Models.News", b =>
                {
                    b.HasOne("NEXUS_API.Models.Employee", "Employee")
                        .WithMany("NewsList")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NEXUS_API.Models.OutStockOrder", b =>
                {
                    b.HasOne("NEXUS_API.Models.Employee", "Employee")
                        .WithMany("OutStockOrders")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Stock", "Stock")
                        .WithMany("OutStockOrders")
                        .HasForeignKey("StockId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Stock");
                });

            modelBuilder.Entity("NEXUS_API.Models.OutStockOrderDetail", b =>
                {
                    b.HasOne("NEXUS_API.Models.Equipment", "Equipment")
                        .WithMany("OutStockOrderDetails")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.OutStockOrder", "OutStockOrder")
                        .WithMany("OutStockOrderDetails")
                        .HasForeignKey("OutStockId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("OutStockOrder");
                });

            modelBuilder.Entity("NEXUS_API.Models.PlanFee", b =>
                {
                    b.HasOne("NEXUS_API.Models.Plan", "Plan")
                        .WithMany("PlanFees")
                        .HasForeignKey("PlanId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("NEXUS_API.Models.RetailShop", b =>
                {
                    b.HasOne("NEXUS_API.Models.Region", "Region")
                        .WithMany("RetailShops")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceBill", b =>
                {
                    b.HasOne("NEXUS_API.Models.ServiceOrder", "ServiceOrder")
                        .WithOne("ServiceBill")
                        .HasForeignKey("NEXUS_API.Models.ServiceBill", "ServiceOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceOrder");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceBillDetail", b =>
                {
                    b.HasOne("NEXUS_API.Models.ServiceBill", "ServiceBill")
                        .WithMany("ServiceBillDetails")
                        .HasForeignKey("BillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ServiceBill");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceOrder", b =>
                {
                    b.HasOne("NEXUS_API.Models.Account", "Account")
                        .WithMany("ServiceOrders")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Employee", "EmployeeCreater")
                        .WithMany("CreatedOrders")
                        .HasForeignKey("EmpIDCreater")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("EmployeeCreater");
                });

            modelBuilder.Entity("NEXUS_API.Models.Stock", b =>
                {
                    b.HasOne("NEXUS_API.Models.Region", "Region")
                        .WithMany("Stocks")
                        .HasForeignKey("RegionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NEXUS_API.Models.SupportRequest", b =>
                {
                    b.HasOne("NEXUS_API.Models.Customer", "Customer")
                        .WithMany("SupportRequests")
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NEXUS_API.Models.Employee", "Employee")
                        .WithMany("SupportRequests")
                        .HasForeignKey("EmpIdResolver");

                    b.HasOne("NEXUS_API.Models.ServiceOrder", null)
                        .WithMany("SupportRequests")
                        .HasForeignKey("ServiceOrderOrderId");

                    b.Navigation("Customer");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("NEXUS_API.Models.Vendor", b =>
                {
                    b.HasOne("NEXUS_API.Models.Region", "Region")
                        .WithMany("Vendors")
                        .HasForeignKey("RegionId");

                    b.Navigation("Region");
                });

            modelBuilder.Entity("NEXUS_API.Models.Account", b =>
                {
                    b.Navigation("ServiceOrders");
                });

            modelBuilder.Entity("NEXUS_API.Models.Connection", b =>
                {
                    b.Navigation("ConnectionDiaries");
                });

            modelBuilder.Entity("NEXUS_API.Models.Customer", b =>
                {
                    b.Navigation("Accounts");

                    b.Navigation("CustomerRequests");

                    b.Navigation("FeedBacks");

                    b.Navigation("SupportRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.Discount", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("NEXUS_API.Models.Employee", b =>
                {
                    b.Navigation("CreatedOrders");

                    b.Navigation("InStockOrders");

                    b.Navigation("NewsList");

                    b.Navigation("OutStockOrders");

                    b.Navigation("SupportRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.EmployeeRole", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("NEXUS_API.Models.Equipment", b =>
                {
                    b.Navigation("InStockOrderDetails");

                    b.Navigation("OutStockOrderDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.EquipmentType", b =>
                {
                    b.Navigation("Equipments");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockOrder", b =>
                {
                    b.Navigation("InStockOrderDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.InStockRequest", b =>
                {
                    b.Navigation("InStockOrders");

                    b.Navigation("InStockRequestDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.OutStockOrder", b =>
                {
                    b.Navigation("OutStockOrderDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.Plan", b =>
                {
                    b.Navigation("Connections");

                    b.Navigation("PlanFees");
                });

            modelBuilder.Entity("NEXUS_API.Models.Region", b =>
                {
                    b.Navigation("RetailShops");

                    b.Navigation("Stocks");

                    b.Navigation("Vendors");
                });

            modelBuilder.Entity("NEXUS_API.Models.RetailShop", b =>
                {
                    b.Navigation("Employees");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceBill", b =>
                {
                    b.Navigation("ServiceBillDetails");
                });

            modelBuilder.Entity("NEXUS_API.Models.ServiceOrder", b =>
                {
                    b.Navigation("Connections");

                    b.Navigation("ServiceBill");

                    b.Navigation("SupportRequests");
                });

            modelBuilder.Entity("NEXUS_API.Models.Stock", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("InStockOrders");

                    b.Navigation("OutStockOrders");
                });

            modelBuilder.Entity("NEXUS_API.Models.Vendor", b =>
                {
                    b.Navigation("Equipments");

                    b.Navigation("InStockOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
